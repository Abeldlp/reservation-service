version: "3.7"

services:
  reservation-db:
    image: postgres
    container_name: reservation-app-db
    environment:
      POSTGRES_DB: "reservation-app-db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_ROOT_PASSWORD: "password"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d app-db -U user"]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "5432:5432"
    volumes:
      - db-volume:/var/lib/mysql

  api-gateway:
    container_name: reservation-gateway-container
    build:
      dockerfile: ./Dockerfile.dev
      context: ../api-gateway
    image: abeldlp/reservation-gateway
    volumes:
      - ../api-gateway:/app
    env_file:
      - ../api-gateway/.env.docker
    ports:
      - "8080:8080"
    depends_on:
      - api-service

  api-service:
    container_name: reservation-service-container
    build:
      dockerfile: ./Dockerfile.dev
      context: ../api-service
    volumes:
      - ../api-service:/app
    env_file:
      - ../api-service/.env.docker
    image: abeldlp/reservation-service
    ports:
      - "8081:8081"
    depends_on:
      reservation-db:
        condition: service_healthy

  auth-service:
    container_name: auth-service-container
    build:
      dockerfile: ./Dockerfile.dev
      context: ../auth-service
    volumes:
      - ../auth-service:/app
    env_file:
      - ../auth-service/.env.docker
    image: abeldlp/auth-service
    ports:
      - "8082:8082"
    depends_on:
      reservation-db:
        condition: service_healthy
volumes:
  db-volume:
