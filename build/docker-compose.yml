version: "3.7"

services:
  # db:
  #   image: postgres
  #   container_name: app-db
  #   environment:
  #     POSTGRES_DB: "app-db"
  #     POSTGRES_USER: "user"
  #     POSTGRES_PASSWORD: "password"
  #     POSTGRES_ROOT_PASSWORD: "password"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -d app-db -U user"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 20
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - db-volume:/var/lib/mysql

  api-gateway:
    container_name: reservation-gateway-container
    build:
      dockerfile: ./Dockerfile
      context: ../api-gateway
    image: abeldlp/reservation-gateway
    env_file:
      - ../api-gateway/.env.docker
    ports:
      - "8080:8080"
    # depends_on:
    #   - api-service

  api-service:
    container_name: reservation-service-container
    build:
      dockerfile: ./Dockerfile
      context: ../api-service
    env_file:
      - ../api-service/.env.docker
    image: abeldlp/reservation-service
    ports:
      - "8081:8081"
    # depends_on:
    #   app-db:
    #     condition: service_healthy

  # auth-service:
  #   container_name: auth-service-container
  #   build:
  #     dockerfile: ./Dockerfile
  #     context: ../auth-service
  #   env_file:
  #     - ./auth-service/.env.docker
  #   image: abeldlp/auth-service
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     app-db:
  #       condition: service_healthy
# volumes:
#   db-volume:
